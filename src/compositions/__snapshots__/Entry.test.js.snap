// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Entry component renders 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Entry />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "center": true,
      "children": Array [
        <Group
          name="note"
          title="Note Text"
          type="text"
        />,
        <Group
          list={
            Array [
              "Red",
              "Blue",
              "Gold",
              "Maroon",
              "Orange",
              "Pink",
              "Plum",
              "Brown",
            ]
          }
          name="color"
          title="Note Color"
          type="select"
        />,
        <ForwardRef>
          ADD NOTE
        </ForwardRef>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "name": "note",
          "onChange": undefined,
          "title": "Note Text",
          "type": "text",
          "value": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "list": Array [
            "Red",
            "Blue",
            "Gold",
            "Maroon",
            "Orange",
            "Pink",
            "Plum",
            "Brown",
          ],
          "name": "color",
          "onChange": undefined,
          "title": "Note Color",
          "type": "select",
          "value": undefined,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": "ADD NOTE",
          "onClick": undefined,
        },
        "ref": null,
        "rendered": "ADD NOTE",
        "type": Object {
          "$$typeof": Symbol(react.forward_ref),
          "attrs": Array [],
          "componentStyle": ComponentStyle {
            "componentId": "sc-EHOje",
            "isStatic": true,
            "rules": Array [
              "
  background: -webkit-linear-gradient(top right, #33bef6, #26aef4);
  color: #ffffff;
  font-size: 15px;
  margin-top: 15px;
  border-radius: 5px;
  cursor: pointer;
  border-color: #33bef6;
  padding: 10px 25px;
  font-weight: 500;
  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);
  transition: all 0.15s ease ease-in-out;
  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);
  }
",
            ],
          },
          "displayName": "Styled(styled.button)",
          "foldedComponentIds": Array [
            "sc-ifAKCX",
          ],
          "render": [Function],
          "styledComponentId": "sc-EHOje",
          "target": "button",
          "toString": [Function],
          "warnTooManyClasses": [Function],
          "withComponent": [Function],
        },
      },
    ],
    "type": Object {
      "$$typeof": Symbol(react.forward_ref),
      "attrs": Array [],
      "componentStyle": ComponentStyle {
        "componentId": "sc-htoDjs",
        "isStatic": false,
        "rules": Array [
          "
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-direction: column;
  max-width: 1270px;
  ",
          [Function],
          "
  ",
          [Function],
          "
",
        ],
      },
      "displayName": "styled.div",
      "foldedComponentIds": Array [],
      "render": [Function],
      "styledComponentId": "sc-htoDjs",
      "target": "div",
      "toString": [Function],
      "warnTooManyClasses": [Function],
      "withComponent": [Function],
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "center": true,
        "children": Array [
          <Group
            name="note"
            title="Note Text"
            type="text"
          />,
          <Group
            list={
              Array [
                "Red",
                "Blue",
                "Gold",
                "Maroon",
                "Orange",
                "Pink",
                "Plum",
                "Brown",
              ]
            }
            name="color"
            title="Note Color"
            type="select"
          />,
          <ForwardRef>
            ADD NOTE
          </ForwardRef>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "name": "note",
            "onChange": undefined,
            "title": "Note Text",
            "type": "text",
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "list": Array [
              "Red",
              "Blue",
              "Gold",
              "Maroon",
              "Orange",
              "Pink",
              "Plum",
              "Brown",
            ],
            "name": "color",
            "onChange": undefined,
            "title": "Note Color",
            "type": "select",
            "value": undefined,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": "ADD NOTE",
            "onClick": undefined,
          },
          "ref": null,
          "rendered": "ADD NOTE",
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "attrs": Array [],
            "componentStyle": ComponentStyle {
              "componentId": "sc-EHOje",
              "isStatic": true,
              "rules": Array [
                "
  background: -webkit-linear-gradient(top right, #33bef6, #26aef4);
  color: #ffffff;
  font-size: 15px;
  margin-top: 15px;
  border-radius: 5px;
  cursor: pointer;
  border-color: #33bef6;
  padding: 10px 25px;
  font-weight: 500;
  box-shadow: 0 4px 6px rgba(50, 50, 93, 0.11), 0 1px 3px rgba(0, 0, 0, 0.08);
  transition: all 0.15s ease ease-in-out;
  &:hover {
    transform: translateY(-1px);
    box-shadow: 0 7px 14px rgba(50, 50, 93, 0.1), 0 3px 6px rgba(0, 0, 0, 0.08);
  }
",
              ],
            },
            "displayName": "Styled(styled.button)",
            "foldedComponentIds": Array [
              "sc-ifAKCX",
            ],
            "render": [Function],
            "styledComponentId": "sc-EHOje",
            "target": "button",
            "toString": [Function],
            "warnTooManyClasses": [Function],
            "withComponent": [Function],
          },
        },
      ],
      "type": Object {
        "$$typeof": Symbol(react.forward_ref),
        "attrs": Array [],
        "componentStyle": ComponentStyle {
          "componentId": "sc-htoDjs",
          "isStatic": false,
          "rules": Array [
            "
  width: 100%;
  display: flex;
  justify-content: flex-start;
  align-items: flex-start;
  flex-direction: column;
  max-width: 1270px;
  ",
            [Function],
            "
  ",
            [Function],
            "
",
          ],
        },
        "displayName": "styled.div",
        "foldedComponentIds": Array [],
        "render": [Function],
        "styledComponentId": "sc-htoDjs",
        "target": "div",
        "toString": [Function],
        "warnTooManyClasses": [Function],
        "withComponent": [Function],
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
